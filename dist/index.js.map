{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport { useCallback, useEffect, useState } from 'react';\r\n\r\ntype Query = firebase.firestore.Query;\r\ntype DocumentData = firebase.firestore.DocumentData;\r\ntype QuerySnapshot = firebase.firestore.QuerySnapshot;\r\ntype IUseFirestorePagination = [\r\n  items: QuerySnapshot | undefined,\r\n  next: () => void,\r\n  previous: () => void,\r\n  setLimit: (newLimit: number) => void,\r\n  isLoading: boolean,\r\n  page: number,\r\n  size: number,\r\n];\r\n\r\nconst useFirestorePagination = (\r\n  query: Query,\r\n  initialLimit: number = 10,\r\n): IUseFirestorePagination => {\r\n  const [currentLimit, setCurrentLimit] = useState(initialLimit);\r\n  const [firstDoc, setFirstDoc] = useState<DocumentData>();\r\n  const [lastDoc, setLastDoc] = useState<DocumentData>();\r\n  const [currentQuery, setCurrentQuery] = useState<Query>(query.limit(initialLimit));\r\n\r\n  const [size, setSize] = useState(0);\r\n  const [items, setItems] = useState<QuerySnapshot>();\r\n  const [page, setPage] = useState(0);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    query.get().then((snapshot) => setSize(snapshot.size));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    currentQuery.get().then((snapshot) => {\r\n      setLoading(false);\r\n      setItems(snapshot);\r\n      setFirstDoc(snapshot.docs[0]);\r\n      setLastDoc(snapshot.docs[snapshot.docs.length - 1]);\r\n    });\r\n  }, [currentQuery]);\r\n\r\n  const next = useCallback(() => {\r\n    setPage((page) => page + 1);\r\n    setCurrentQuery(query.startAfter(lastDoc).limit(currentLimit));\r\n  }, []);\r\n  const previous = useCallback(() => {\r\n    setPage((page) => page - 1);\r\n    setCurrentQuery(query.endBefore(firstDoc).limitToLast(currentLimit));\r\n  }, []);\r\n  const setLimit = useCallback((newLimit: number) => {\r\n    setPage(0);\r\n    setCurrentLimit(newLimit);\r\n    setCurrentQuery(query.limit(newLimit));\r\n  }, []);\r\n\r\n  return [items, next, previous, setLimit, isLoading, page, size];\r\n};\r\n\r\nexport default useFirestorePagination;\r\n"],"names":["useFirestorePagination","query","initialLimit","_a","useState","currentLimit","setCurrentLimit","_b","firstDoc","setFirstDoc","_c","lastDoc","setLastDoc","_d","limit","currentQuery","setCurrentQuery","_e","size","setSize","_f","items","setItems","_g","page","setPage","_h","isLoading","setLoading","useEffect","get","then","snapshot","docs","length","useCallback","startAfter","endBefore","limitToLast","newLimit"],"mappings":"2SAiBMA,uBAAyB,SAC7BC,EACAC,gBAAAA,MAEM,IAAAC,EAAkCC,eAASF,GAA1CG,OAAcC,OACfC,EAA0BH,iBAAzBI,OAAUC,OACXC,EAAwBN,iBAAvBO,OAASC,OACVC,EAAkCT,eAAgBH,EAAMa,MAAMZ,IAA7Da,OAAcC,OAEfC,EAAkBb,eAAS,GAA1Bc,OAAMC,OACPC,EAAoBhB,iBAAnBiB,OAAOC,OACRC,EAAkBnB,eAAS,GAA1BoB,OAAMC,OACPC,EAA0BtB,gBAAS,GAAlCuB,OAAWC,OA8BlB,OA5BAC,gBAAU,WACR5B,EAAM6B,MAAMC,KAAK,SAACC,GAAa,OAAAb,EAAQa,EAASd,SAC/C,IAEHW,gBAAU,WACRD,GAAW,GACXb,EAAae,MAAMC,KAAK,SAACC,GACvBJ,GAAW,GACXN,EAASU,GACTvB,EAAYuB,EAASC,KAAK,IAC1BrB,EAAWoB,EAASC,KAAKD,EAASC,KAAKC,OAAS,OAEjD,CAACnB,IAgBG,CAACM,EAdKc,kBAAY,WACvBV,EAAQ,SAACD,GAAS,OAAAA,EAAO,IACzBR,EAAgBf,EAAMmC,WAAWzB,GAASG,MAAMT,KAC/C,IACc8B,kBAAY,WAC3BV,EAAQ,SAACD,GAAS,OAAAA,EAAO,IACzBR,EAAgBf,EAAMoC,UAAU7B,GAAU8B,YAAYjC,KACrD,IACc8B,kBAAY,SAACI,GAC5Bd,EAAQ,GACRnB,EAAgBiC,GAChBvB,EAAgBf,EAAMa,MAAMyB,KAC3B,IAEsCZ,EAAWH,EAAMN"}